{
  "openapi": "3.1.0",
  "info": {
    "title": "Mira API",
    "version": "1.0.0"
  },
  "paths": {
    "/v1/task": {
      "post": {
        "operationId": "create_task",
        "summary": "Create a new task",
        "x-codeSamples": [
          {
            "lang": "Python",
            "label": "Appointment Scheduling",
            "source": "import requests\n\nurl = 'https://api.miramace.com/v1/task'\nheaders = {\n    'Authorization': 'Bearer YOUR_API_KEY',\n    'Content-Type': 'application/json'\n}\npayload = {\n    'task_type': 'SCHEDULE_APPOINTMENT',\n    'task': 'Schedule a follow-up appointment with Dr. Smith for next week',\n    'phone_number': '+15555555555',\n    'project_id': '123e4567-e89b-12d3-a456-426614174000',\n    'patient_id': '123e4567-e89b-12d3-a456-426614174001',\n    'task_data': {\n        'timeframe_availability': 'Weekdays between 2-5pm',\n        'speciality_preferences': 'Orthopedic surgeon, preferably Dr. Smith',\n        'additional_context': 'Patient prefers afternoon appointments',\n        'previous_visits': [{\n            'purpose': 'Initial consultation for knee pain',\n            'date': '2024-03-15',\n            'outcome': 'Recommended physical therapy and follow-up'\n        }],\n        'patient_status': 'existing',\n        'has_referral': true,\n        'referral': {\n            'name': 'Dr. Robert Johnson',\n            'npi': '0987654321',\n            'specialty': 'Primary Care',\n            'practice': 'SF Medical Group',\n            'address': {\n                'street_name': '456 Health Ave',\n                'city': 'San Francisco',\n                'state': 'CA',\n                'postal_code': '94105',\n                'country_code': 'US'\n            },\n            'phone_number': '+14155555556'\n        },\n        'is_rescheduling': false,\n        'existing_appointment': null,\n        'reschedule_reason': null\n    }\n}\n\nresponse = requests.post(url, json=payload, headers=headers)\nprint(response.json())"
          },
          {
            "lang": "Python",
            "label": "Verify Insurance",
            "source": "import requests\n\nurl = 'https://api.miramace.com/v1/task'\nheaders = {\n    'Authorization': 'Bearer YOUR_API_KEY',\n    'Content-Type': 'application/json'\n}\npayload = {\n    'task_type': 'VERIFY_INSURANCE',\n    'task': 'Verify insurance coverage for MRI',\n    'phone_number': '+15555555555',\n    'project_id': 'proj_xyz789',\n    'patient_id': 'pat_abc123',\n    'task_data': {\n        'service': {\n            'description': 'MRI of right knee',\n            'cpt_codes': ['73721']\n        },\n        'requirements': 'Need to verify out-of-network coverage',\n        'additional_context': 'Patient may need pre-authorization'\n    }\n}\n\nresponse = requests.post(url, json=payload, headers=headers)\nprint(response.json())"
          },
          {
            "lang": "Python",
            "label": "Insurance Reimbursement",
            "source": "import requests\n\nurl = 'https://api.miramace.com/v1/task'\nheaders = {\n    'Authorization': 'Bearer YOUR_API_KEY',\n    'Content-Type': 'application/json'\n}\npayload = {\n    'task_type': 'INSURANCE_REIMBURSEMENT',\n    'task': 'Follow up on reimbursement for ER visit',\n    'phone_number': '+15555555555',\n    'project_id': 'proj_xyz789',\n    'patient_id': 'pat_abc123',\n    'task_data': {\n        'case_info': {\n            'number': 'CASE-12345'\n        },\n        'bill': {\n            'number': 'INV-12345',\n            'amount': '$1,250.00'\n        },\n        'reimbursement_status': 'Pending',\n        'treatment_background': 'Emergency room visit for broken arm',\n        'additional_context': 'Need to reach billing department for invoice question'\n    }\n}\n\nresponse = requests.post(url, json=payload, headers=headers)\nprint(response.json())"
          },
          {
            "lang": "Python",
            "label": "Provider Credentialing",
            "source": "import requests\n\nurl = 'https://api.miramace.com/v1/task'\nheaders = {\n    'Authorization': 'Bearer YOUR_API_KEY',\n    'Content-Type': 'application/json'\n}\npayload = {\n    'task_type': 'PROVIDER_CREDENTIALING',\n    'task': 'Check credentialing status for Dr. Smith',\n    'phone_number': '+15555555555',\n    'project_id': 'proj_xyz789',\n    'patient_id': 'pat_abc123',\n    'task_data': {\n        'provider': {\n            'name': 'Dr. Jane Smith',\n            'npi': '1234567890',\n            'specialty': 'Orthopedics'\n        },\n        'additional_context': 'Verifying status of credentialing application submitted last month'\n    }\n}\n\nresponse = requests.post(url, json=payload, headers=headers)\nprint(response.json())"
          },
          {
            "lang": "Python",
            "label": "Custom Task",
            "source": "import requests\n\nurl = 'https://api.miramace.com/v1/task'\nheaders = {\n    'Authorization': 'Bearer YOUR_API_KEY',\n    'Content-Type': 'application/json'\n}\npayload = {\n    'task_type': 'CUSTOM_TASK',\n    'task': 'Follow up on wheelchair delivery',\n    'phone_number': '+15555555555',\n    'project_id': 'proj_xyz789',\n    'patient_id': 'pat_abc123',\n    'task_data': {\n        'additional_context': 'Check if the member has received their recent wheelchair delivery and if they have any questions about it',\n        'questions_to_ask': [\n            {\n                'question': 'Have you received your wheelchair delivery?',\n                'context': 'Delivery was scheduled for last Tuesday'\n            },\
        {\
          question: 'Is the wheelchair meeting your needs?',\
          context: 'This is a standard follow-up question'\
        }\
      ]\
    }\
  })\n});\n\nconst data = await response.json();\nconsole.log(data);"
          },
          {
            "lang": "JavaScript",
            "label": "Appointment Scheduling",
            "source": "const response = await fetch('https://api.miramace.com/v1/task', {\n  method: 'POST',\n  headers: {\n    'Authorization': 'Bearer YOUR_API_KEY',\n    'Content-Type': 'application/json',\n  },\n  body: JSON.stringify({\n    task_type: 'SCHEDULE_APPOINTMENT',\n    task: 'Schedule a follow-up appointment with Dr. Smith for next week',\n    phone_number: '+15555555555',\n    project_id: '123e4567-e89b-12d3-a456-426614174000',\n    patient_id: '123e4567-e89b-12d3-a456-426614174001',\n    task_data: {\n      timeframe_availability: 'Weekdays between 2-5pm',\n      speciality_preferences: 'Orthopedic surgeon, preferably Dr. Smith',\n      additional_context: 'Patient prefers afternoon appointments',\n      previous_visits: [{\n        purpose: 'Initial consultation for knee pain',\n        date: '2024-03-15',\n        outcome: 'Recommended physical therapy and follow-up'\n      }],\n      patient_status: 'existing',\n      has_referral: true,\n      referral: {\n        name: 'Dr. Robert Johnson',\n        npi: '0987654321',\n        specialty: 'Primary Care',\n        practice: 'SF Medical Group',\n        address: {\n          street_name: '456 Health Ave',\n          city: 'San Francisco',\n          state: 'CA',\n          postal_code: '94105',\n          country_code: 'US'\n        },\n        phone_number: '+14155555556'\n      },\n      is_rescheduling: false,\n      existing_appointment: null,\n      reschedule_reason: null\n    }\n  })\n});\n\nconst data = await response.json();\nconsole.log(data);"
          },
          {
            "lang": "JavaScript",
            "label": "Verify Insurance",
            "source": "const response = await fetch('https://api.miramace.com/v1/task', {\n  method: 'POST',\n  headers: {\n    'Authorization': 'Bearer YOUR_API_KEY',\n    'Content-Type': 'application/json',\n  },\n  body: JSON.stringify({\n    task_type: 'VERIFY_INSURANCE',\n    task: 'Verify insurance coverage for MRI',\n    phone_number: '+15555555555',\n    project_id: 'proj_xyz789',\n    patient_id: 'pat_abc123',\n    task_data: {\n      service: {\n        description: 'MRI of right knee',\n        cpt_codes: ['73721']\n      },\n      requirements: 'Need to verify out-of-network coverage',\n      additional_context: 'Patient may need pre-authorization'\n    }\n  })\n});\n\nconst data = await response.json();\nconsole.log(data);"
          },
          {
            "lang": "JavaScript",
            "label": "Insurance Reimbursement",
            "source": "const response = await fetch('https://api.miramace.com/v1/task', {\n  method: 'POST',\n  headers: {\n    'Authorization': 'Bearer YOUR_API_KEY',\n    'Content-Type': 'application/json',\n  },\n  body: JSON.stringify({\n    task_type: 'INSURANCE_REIMBURSEMENT',\n    task: 'Follow up on reimbursement for ER visit',\n    phone_number: '+15555555555',\n    project_id: 'proj_xyz789',\n    patient_id: 'pat_abc123',\n    task_data: {\n      case_info: {\n        number: 'CASE-12345'\n      },\n      bill: {\n        number: 'INV-12345',\n        amount: '$1,250.00'\n      },\n      reimbursement_status: 'Pending',\n      treatment_background: 'Emergency room visit for broken arm',\n      additional_context: 'Need to reach billing department for invoice question'\n    }\n  })\n});\n\nconst data = await response.json();\nconsole.log(data);"
          },
          {
            "lang": "JavaScript",
            "label": "Provider Credentialing",
            "source": "const response = await fetch('https://api.miramace.com/v1/task', {\n  method: 'POST',\n  headers: {\n    'Authorization': 'Bearer YOUR_API_KEY',\n    'Content-Type': 'application/json',\n  },\n  body: JSON.stringify({\n    task_type: 'PROVIDER_CREDENTIALING',\n    task: 'Check credentialing status for Dr. Smith',\n    phone_number: '+15555555555',\n    project_id: 'proj_xyz789',\n    patient_id: 'pat_abc123',\n    task_data: {\n      provider: {\n        name: 'Dr. Jane Smith',\n        npi: '1234567890',\n        specialty: 'Orthopedics'\n      },\n      additional_context: 'Verifying status of credentialing application submitted last month'\n    }\n  })\n});\n\nconst data = await response.json();\nconsole.log(data);"
          },
          {
            "lang": "JavaScript",
            "label": "Custom Task",
            "source": "const response = await fetch('https://api.miramace.com/v1/task', {\n  method: 'POST',\n  headers: {\n    'Authorization': 'Bearer YOUR_API_KEY',\n    'Content-Type': 'application/json',\n  },\n  body: JSON.stringify({\n    task_type: 'CUSTOM_TASK',\n    task: 'Follow up on wheelchair delivery',\
    \"phone_number\": \"+15555555555\",\
    \"project_id\": \"proj_xyz789\",\
    \"patient_id\": \"pat_abc123\",\
    \"task_data\": {\
      \"additional_context\": \"Check if the member has received their recent wheelchair delivery and if they have any questions about it\",\
      \"questions_to_ask\": [\
        {\
          \"question\": \"Have you received your wheelchair delivery?\",\
          \"context\": \"Delivery was scheduled for last Tuesday\"\
        },\
        {\
          \"question\": \"Is the wheelchair meeting your needs?\",\
          \"context\": \"This is a standard follow-up question\"\
        }\
      ]\
    }\
  })\n});\n\nconst data = await response.json();\nconsole.log(data);"
          },
          {
            "lang": "cURL",
            "label": "Appointment Scheduling",
            "source": "curl --request POST \\\n  --url https://api.miramace.com/v1/task \\\n  --header 'Authorization: Bearer YOUR_API_KEY' \\\n  --header 'Content-Type: application/json' \\\n  --data '{\n    \"task_type\": \"SCHEDULE_APPOINTMENT\",\n    \"task\": \"Schedule a follow-up appointment with Dr. Smith for next week\",\n    \"phone_number\": \"+15555555555\",\n    \"project_id\": \"123e4567-e89b-12d3-a456-426614174000\",\n    \"patient_id\": \"123e4567-e89b-12d3-a456-426614174001\",\n    \"task_data\": {\n      \"timeframe_availability\": \"Weekdays between 2-5pm\",\n      \"speciality_preferences\": \"Orthopedic surgeon, preferably Dr. Smith\",\n      \"additional_context\": \"Patient prefers afternoon appointments\",\n      \"previous_visits\": [{\n        \"purpose\": \"Initial consultation for knee pain\",\n        \"date\": \"2024-03-15\",\n        \"outcome\": \"Recommended physical therapy and follow-up\"\n      }],\n      \"patient_status\": \"existing\",\n      \"has_referral\": true,\n      \"referral\": {\n        \"name\": \"Dr. Robert Johnson\",\n        \"npi\": \"0987654321\",\n        \"specialty\": \"Primary Care\",\n        \"practice\": \"SF Medical Group\",\n        \"address\": {\n          \"street_name\": \"456 Health Ave\",\n          \"city\": \"San Francisco\",\n          \"state\": \"CA\",\n          \"postal_code\": \"94105\",\n          \"country_code\": \"US\"\n        },\n        \"phone_number\": \"+14155555556\"\n      },\n      \"is_rescheduling\": false,\n      \"existing_appointment\": null,\n      \"reschedule_reason\": null\n    }\n  }'"
          },
          {
            "lang": "cURL",
            "source": "curl --request POST \\\n  --url https://api.miramace.com/v1/task \\\n  --header 'Authorization: Bearer YOUR_API_KEY' \\\n  --header 'Content-Type: application/json' \\\n  --data '{\n    \"task_type\": \"VERIFY_INSURANCE\",\n    \"task\": \"Verify insurance coverage for MRI\",\n    \"phone_number\": \"+15555555555\",\n    \"project_id\": \"proj_xyz789\",\n    \"patient_id\": \"pat_abc123\",\n    \"task_data\": {\n      \"service\": {\n        \"description\": \"MRI of right knee\",\n        \"cpt_codes\": [\"73721\"]\n      },\n      \"requirements\": \"Need to verify out-of-network coverage\",\n      \"additional_context\": \"Patient may need pre-authorization\"\n    }\n  }'"
          },
          {
            "lang": "cURL",
            "source": "curl --request POST \\\n  --url https://api.miramace.com/v1/task \\\n  --header 'Authorization: Bearer YOUR_API_KEY' \\\n  --header 'Content-Type: application/json' \\\n  --data '{\n    \"task_type\": \"INSURANCE_REIMBURSEMENT\",\n    \"task\": \"Follow up on reimbursement for ER visit\",\n    \"phone_number\": \"+15555555555\",\n    \"project_id\": \"proj_xyz789\",\n    \"patient_id\": \"pat_abc123\",\n    \"task_data\": {\n      \"case_info\": {\n        \"number\": \"CASE-12345\"\n      },\n      \"bill\": {\n        \"number\": \"INV-12345\",\n        \"amount\": \"$1,250.00\"\n      },\n      \"reimbursement_status\": \"Pending\",\n      \"treatment_background\": \"Emergency room visit for broken arm\",\n      \"additional_context\": \"Need to reach billing department for invoice question\"\n    }\n  }'"
          },
          {
            "lang": "cURL",
            "source": "curl --request POST \\\n  --url https://api.miramace.com/v1/task \\\n  --header 'Authorization: Bearer YOUR_API_KEY' \\\n  --header 'Content-Type: application/json' \\\n  --data '{\n    \"task_type\": \"PROVIDER_CREDENTIALING\",\n    \"task\": \"Check credentialing status for Dr. Smith\",\n    \"phone_number\": \"+15555555555\",\n    \"project_id\": \"proj_xyz789\",\n    \"patient_id\": \"pat_abc123\",\n    \"task_data\": {\n      \"provider\": {\n        \"name\": \"Dr. Jane Smith\",\n        \"npi\": \"1234567890\",\n        \"specialty\": \"Orthopedics\"\n      },\n      \"additional_context\": \"Verifying status of credentialing application submitted last month\"\n    }\n  }'"
          },
          {
            "lang": "cURL",
            "source": "curl --request POST \\\n  --url https://api.miramace.com/v1/task \\\n  --header 'Authorization: Bearer YOUR_API_KEY' \\\n  --header 'Content-Type: application/json' \\\n  --data '{\n    \"task_type\": \"CUSTOM_TASK\",\n    \"task\": \"Follow up on wheelchair delivery\",\
    \"phone_number\": \"+15555555555\",\
    \"project_id\": \"proj_xyz789\",\
    \"patient_id\": \"pat_abc123\",\
    \"task_data\": {\
      \"additional_context\": \"Check if the member has received their recent wheelchair delivery and if they have any questions about it\",\
      \"questions_to_ask\": [\
        {\
          \"question\": \"Have you received your wheelchair delivery?\",\
          \"context\": \"Delivery was scheduled for last Tuesday\"\
        },\
        {\
          \"question\": \"Is the wheelchair meeting your needs?\",\
          \"context\": \"This is a standard follow-up question\"\
        }\
      ]\
    }\
  }'"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTaskRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Task created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskResponse"
                },
                "example": {
                  "id": "task_123abc",
                  "project_id": "proj_xyz789",
                  "patient_id": "pat_01HQ3MXKB3NZV8ZXGY4WQTHVR9",
                  "status": "PENDING",
                  "call_type": "OUTBOUND_CALL",
                  "task_type": "SCHEDULE_APPOINTMENT",
                  "task": "Schedule a follow-up appointment with Dr. Smith for next week",
                  "created_at": "2024-03-20T10:00:00Z",
                  "updated_at": "2024-03-20T10:00:00Z"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required fields",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Missing required fields"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid API key",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Invalid API key"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/task/{task_id}": {
      "get": {
        "operationId": "get_task",
        "summary": "Get task details",
        "description": "Get detailed information about a task, including its current status and progress.",
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "UUID of the task to retrieve",
              "example": "123e4567-e89b-12d3-a456-426614174002"
            },
            "description": "The ID of the task to retrieve"
          },
          {
            "name": "include_patient",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Whether to include patient details in the response"
          },
          {
            "name": "include_transcript",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Whether to include the call transcript in the response"
          },
          {
            "name": "include_recording",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Whether to include the call recording URL in the response"
          }
        ],
        "x-codeSamples": [
          {
            "lang": "Python",
            "source": "import requests\n\nurl = 'https://api.miramace.com/v1/task/ffaa02bc-eed2-49ae-aa34-34b3c3ce551d'\nheaders = {\n    'Authorization': 'Bearer YOUR_API_KEY'\n}\n\n# Optional query parameters\nparams = {\n    'include_patient': True,\n    'include_transcript': True,\n    'include_recording': False\n}\n\nresponse = requests.get(url, headers=headers, params=params)\nprint(response.json())"
          },
          {
            "lang": "JavaScript",
            "source": "const response = await fetch('https://api.miramace.com/v1/task/ffaa02bc-eed2-49ae-aa34-34b3c3ce551d?include_patient=true&include_transcript=true', {\n  headers: {\n    'Authorization': 'Bearer YOUR_API_KEY'\n  }\n});\n\nconst data = await response.json();\nconsole.log(data);"
          },
          {
            "lang": "cURL",
            "source": "curl --request GET \\\n  --url 'https://api.miramace.com/v1/task/ffaa02bc-eed2-49ae-aa34-34b3c3ce551d?include_patient=true&include_transcript=true' \\\n  --header 'Authorization: Bearer YOUR_API_KEY'"
          }
        ],
        "responses": {
          "200": {
            "description": "Task details retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskResponse"
                }
              }
            }
          },
          "404": {
            "description": "Task not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Task not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/patient": {
      "post": {
        "operationId": "create_patient",
        "summary": "Create a new patient",
        "x-codeSamples": [
          {
            "lang": "Python",
            "source": "import requests\n\nurl = 'https://api.miramace.com/v1/patient'\nheaders = {\n    'Authorization': 'Bearer YOUR_API_KEY',\n    'Content-Type': 'application/json'\n}\npayload = {\n    'project_id': '123e4567-e89b-12d3-a456-426614174000',\n    'phone_number': '+15555555555',\n    'email': 'patient@example.com',\n    'first_name': 'Jane',\n    'last_name': 'Doe',\n    'date_of_birth': '1990-01-15',\n    'address': {\n        'street_name': '123 Market Street',\n        'city': 'San Francisco',\n        'state': 'CA',\n        'postal_code': '94105',\n        'country_code': 'US'\n    },\n    'primary_care_provider': {\n        'name': 'Dr. Sarah Smith',\n        'practice': 'SF Medical Group'\n    },\n    'insurance': {\n        'medical': [\n            {\n                'company_name': 'Blue Cross Blue Shield',\n                'member_id': 'BCB123456789',\n                'group_number': 'GRP987654',\n                'plan_name': 'PPO Gold',\n                'phone_number': '+18005551234',\n                'relationship_to_subscriber': 'SELF',\n                'primary_subscriber': {\n                    'first_name': 'Jane',\n                    'last_name': 'Doe'\n                }\n            }\n        ],\n        'dental': [\n            {\n                'company_name': 'Delta Dental',\n                'member_id': 'DDB123456789',\n                'group_number': 'GRPD123',\n                'plan_name': 'Premier Plan',\n                'phone_number': '+18005553456',\n                'relationship_to_subscriber': 'SELF',\n                'primary_subscriber': {\n                    'first_name': 'Jane',\n                    'last_name': 'Doe'\n                }\n            }\n        ],\n        'vision': [\n            {\n                'company_name': 'VSP',\n                'member_id': 'VSP123456789',\n                'group_number': 'GRPV123',\n                'plan_name': 'Vision Care',\n                'phone_number': '+18005554567',\n                'relationship_to_subscriber': 'SELF',\n                'primary_subscriber': {\n                    'first_name': 'Jane',\n                    'last_name': 'Doe'\n                }\n            }\n        ]\n    }\n}\n\nresponse = requests.post(url, json=payload, headers=headers)\nprint(response.json())"
          },
          {
            "lang": "JavaScript",
            "source": "const response = await fetch('https://api.miramace.com/v1/patient', {\n  method: 'POST',\n  headers: {\n    'Authorization': 'Bearer YOUR_API_KEY',\n    'Content-Type': 'application/json',\n  },\n  body: JSON.stringify({\n    project_id: '123e4567-e89b-12d3-a456-426614174000',\n    phone_number: '+15555555555',\n    email: 'patient@example.com',\n    first_name: 'Jane',\n    last_name: 'Doe',\n    date_of_birth: '1990-01-15',\n    address: {\n      street_name: '123 Market Street',\n      city: 'San Francisco',\n      state: 'CA',\n      postal_code: '94105',\n      country_code: 'US'\n    },\n    primary_care_provider: {\n      name: 'Dr. Sarah Smith',\n      practice: 'SF Medical Group'\n    },\n    insurance: {\n      medical: [\n        {\n          company_name: 'Blue Cross Blue Shield',\n          member_id: 'BCB123456789',\n          group_number: 'GRP987654',\n          plan_name: 'PPO Gold',\n          phone_number: '+18005551234',\n          relationship_to_subscriber: 'SELF',\n          primary_subscriber: {\n            first_name: 'Jane',\n            last_name: 'Doe'\n          }\n        }\n      ],\n      dental: [\n        {\n          company_name: 'Delta Dental',\n          member_id: 'DDB123456789',\n          group_number: 'GRPD123',\n          plan_name: 'Premier Plan',\n          phone_number: '+18005553456',\n          relationship_to_subscriber: 'SELF',\n          primary_subscriber: {\n            first_name: 'Jane',\n            last_name: 'Doe'\n          }\n        }\n      ],\n      vision: [\n        {\n          company_name: 'VSP',\n          member_id: 'VSP123456789',\n          group_number: 'GRPV123',\n          plan_name: 'Vision Care',\n          phone_number: '+18005554567',\n          relationship_to_subscriber: 'SELF',\n          primary_subscriber: {\n            first_name: 'Jane',\n            last_name: 'Doe'\n          }\n        }\n      ]\n    }\n  })\n});\n\nconst data = await response.json();\nconsole.log(data);"
          },
          {
            "lang": "cURL",
            "source": "curl --request POST \\\n  --url https://api.miramace.com/v1/patient \\\n  --header 'Authorization: Bearer YOUR_API_KEY' \\\n  --header 'Content-Type: application/json' \\\n  --data '{\n    \"project_id\": \"123e4567-e89b-12d3-a456-426614174000\",\
    \"phone_number\": \"+15555555555\",\
    \"email\": \"patient@example.com\",\
    \"first_name\": \"Jane\",\
    \"last_name\": \"Doe\",\
    \"date_of_birth\": \"1990-01-15\",\
    \"address\": {\
      \"street_name\": \"123 Market Street\",\
      \"city\": \"San Francisco\",\
      \"state\": \"CA\",\
      \"postal_code\": \"94105\",\
      \"country_code\": \"US\"\
    },\
    \"primary_care_provider\": {\
      \"name\": \"Dr. Sarah Smith\",\
      \"practice\": \"SF Medical Group\"\
    },\
    \"insurance\": {\
      \"medical\": [\
        {\
          \"company_name\": \"Blue Cross Blue Shield\",\
          \"member_id\": \"BCB123456789\",\
          \"group_number\": \"GRP987654\",\
          \"plan_name\": \"PPO Gold\",\
          \"phone_number\": \"+18005551234\",\
          \"relationship_to_subscriber\": \"SELF\",\
          \"primary_subscriber\": {\
            \"first_name\": \"Jane\",\
            \"last_name\": \"Doe\"\
          }\
        }\
      ],\
      \"dental\": [\
        {\
          \"company_name\": \"Delta Dental\",\
          \"member_id\": \"DDB123456789\",\
          \"group_number\": \"GRPD123\",\
          \"plan_name\": \"Premier Plan\",\
          \"phone_number\": \"+18005553456\",\
          \"relationship_to_subscriber\": \"SELF\",\
          \"primary_subscriber\": {\
            \"first_name\": \"Jane\",\
            \"last_name\": \"Doe\"\
          }\
        }\
      ],\
      \"vision\": [\
        {\
          \"company_name\": \"VSP\",\
          \"member_id\": \"VSP123456789\",\
          \"group_number\": \"GRPV123\",\
          \"plan_name\": \"Vision Care\",\
          \"phone_number\": \"+18005554567\",\
          \"relationship_to_subscriber\": \"SELF\",\
          \"primary_subscriber\": {\
            \"first_name\": \"Jane\",\
            \"last_name\": \"Doe\"\
          }\
        }\
      ]\
    }\
  }'"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePatientRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Patient created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "description": "UUID of the created patient",
                      "example": "123e4567-e89b-12d3-a456-426614174001"
                    }
                  }
                },
                "example": {
                  "id": "123e4567-e89b-12d3-a456-426614174001"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required fields",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Missing required fields"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid API key",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Invalid API key"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/patient/{patient_id}": {
      "get": {
        "operationId": "get_patient",
        "summary": "Get patient details",
        "description": "Get detailed information about a patient.",
        "parameters": [
          {
            "name": "patient_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "UUID of the patient to retrieve",
              "example": "123e4567-e89b-12d3-a456-426614174001"
            },
            "description": "The ID of the patient to retrieve"
          }
        ],
        "x-codeSamples": [
          {
            "lang": "Python",
            "source": "import requests\n\nurl = 'https://api.miramace.com/v1/patient/d7038030-aa24-4b89-a076-23c3fd29df34'\nheaders = {\n    'Authorization': 'Bearer YOUR_API_KEY',\n    'Content-Type': 'application/json'\n}\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())"
          },
          {
            "lang": "JavaScript",
            "source": "const response = await fetch('https://api.miramace.com/v1/patient/d7038030-aa24-4b89-a076-23c3fd29df34', {\n  headers: {\n    'Authorization': 'Bearer YOUR_API_KEY',\n    'Content-Type': 'application/json'\n  }\n});\n\nconst data = await response.json();\nconsole.log(data);"
          },
          {
            "lang": "cURL",
            "source": "curl --request GET \\\n  --url https://api.miramace.com/v1/patient/d7038030-aa24-4b89-a076-23c3fd29df34 \\\n  --header 'Authorization: Bearer YOUR_API_KEY' \\\n  --header 'Content-Type: application/json'"
          }
        ],
        "responses": {
          "200": {
            "description": "Patient details retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid patient ID format",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Invalid patient ID format"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid API key",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Invalid API key"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Patient not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Patient not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "PhoneNumber": {
        "type": "string",
        "description": "The phone number in E.164 format (e.g., +15555555555)",
        "pattern": "^\\+[1-9]\\d{1,14}$",
        "example": "+15555555555"
      },
      "Date": {
        "type": "string",
        "format": "date",
        "description": "Date in ISO 8601 format (YYYY-MM-DD)",
        "example": "1990-01-01"
      },
      "Gender": {
        "type": "string",
        "enum": [
          "MALE",
          "FEMALE",
          "OTHER",
          "PREFER_NOT_TO_SAY"
        ],
        "description": "Gender of the patient"
      },
      "Address": {
        "type": "object",
        "required": [
          "street_name",
          "city",
          "state",
          "postal_code",
          "country_code"
        ],
        "properties": {
          "street_name": {
            "type": "string",
            "description": "Street address",
            "example": "123 Main St"
          },
          "city": {
            "type": "string",
            "description": "City",
            "example": "San Francisco"
          },
          "state": {
            "type": "string",
            "description": "State/province",
            "example": "CA"
          },
          "postal_code": {
            "type": "string",
            "description": "Postal/ZIP code",
            "example": "94105"
          },
          "country_code": {
            "type": "string",
            "description": "Two-letter country code",
            "example": "US"
          }
        }
      },
      "MemberInsurance": {
        "type": "object",
        "properties": {
          "company_name": {
            "type": "string",
            "description": "The name of the insurance company",
            "example": "Blue Cross Blue Shield"
          },
          "member_id": {
            "type": "string",
            "description": "The member ID",
            "example": "XYZ1234567"
          },
          "group_number": {
            "type": "string",
            "description": "The group number",
            "example": "GRP123456"
          },
          "plan_name": {
            "type": "string",
            "description": "The plan name",
            "example": "PPO Gold"
          },
          "phone_number": {
            "$ref": "#/components/schemas/PhoneNumber",
            "nullable": true
          },
          "relationship_to_subscriber": {
            "$ref": "#/components/schemas/RelationshipToSubscriber"
          },
          "primary_subscriber": {
            "$ref": "#/components/schemas/PrimarySubscriber"
          }
        }
      },
      "PrimarySubscriber": {
        "type": "object",
        "properties": {
          "first_name": {
            "type": "string",
            "description": "The first name of the primary subscriber",
            "example": "John"
          },
          "last_name": {
            "type": "string",
            "description": "The last name of the primary subscriber",
            "example": "Doe"
          }
        }
      },
      "RelationshipToSubscriber": {
        "type": "string",
        "enum": [
          "RELATIONSHIP_TO_SUBSCRIBER_UNSPECIFIED",
          "SELF",
          "SPOUSE",
          "DEPENDENT"
        ],
        "description": "The relationship of the member to the primary subscriber",
        "example": "SELF"
      },
      "PatientBase": {
        "type": "object",
        "required": [
          "first_name",
          "last_name",
          "address"
        ],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "description": "Email address of the patient"
          },
          "first_name": {
            "type": "string",
            "description": "First name of the patient",
            "example": "Jane"
          },
          "last_name": {
            "type": "string",
            "description": "Last name of the patient",
            "example": "Doe"
          },
          "date_of_birth": {
            "$ref": "#/components/schemas/Date"
          },
          "phone_number": {
            "$ref": "#/components/schemas/PhoneNumber"
          },
          "address": {
            "$ref": "#/components/schemas/Address"
          },
          "primary_care_provider": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the patient's primary care provider"
              },
              "practice": {
                "type": "string",
                "description": "Practice name of the patient's primary care provider"
              }
            }
          },
          "insurance": {
            "type": "object",
            "properties": {
              "medical": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MemberInsurance"
                }
              },
              "dental": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MemberInsurance"
                }
              },
              "vision": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MemberInsurance"
                }
              }
            }
          }
        }
      },
      "CreatePatientRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PatientBase"
          },
          {
            "type": "object",
            "required": [
              "project_id",
              "phone_number"
            ],
            "properties": {
              "project_id": {
                "type": "string",
                "format": "uuid",
                "description": "UUID of the project this patient belongs to",
                "example": "123e4567-e89b-12d3-a456-426614174000"
              }
            }
          }
        ]
      },
      "PatientResponse": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "format": "email",
                "description": "Email address of the patient"
              },
              "first_name": {
                "type": "string",
                "description": "First name of the patient",
                "example": "Jane"
              },
              "last_name": {
                "type": "string",
                "description": "Last name of the patient",
                "example": "Doe"
              },
              "date_of_birth": {
                "$ref": "#/components/schemas/Date"
              },
              "phone_number": {
                "$ref": "#/components/schemas/PhoneNumber"
              },
              "address": {
                "$ref": "#/components/schemas/Address"
              },
              "primary_care_provider": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the patient's primary care provider"
                  },
                  "practice": {
                    "type": "string",
                    "description": "Practice name of the patient's primary care provider"
                  }
                }
              },
              "insurance": {
                "type": "object",
                "properties": {
                  "medical": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/MemberInsurance"
                    }
                  },
                  "dental": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/MemberInsurance"
                    }
                  },
                  "vision": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/MemberInsurance"
                    }
                  }
                }
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid",
                "description": "UUID of the patient",
                "example": "123e4567-e89b-12d3-a456-426614174001"
              },
              "project_id": {
                "type": "string",
                "format": "uuid",
                "description": "UUID of the project this patient belongs to",
                "example": "123e4567-e89b-12d3-a456-426614174000"
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "description": "Timestamp when the patient was created"
              },
              "updated_at": {
                "type": "string",
                "format": "date-time",
                "description": "Timestamp when the patient was last updated"
              }
            }
          }
        ],
        "example": {
          "id": "123e4567-e89b-12d3-a456-426614174001",
          "project_id": "123e4567-e89b-12d3-a456-426614174000",
          "email": "jane.doe@example.com",
          "first_name": "Jane",
          "last_name": "Doe",
          "date_of_birth": "1990-01-15",
          "phone_number": "+14155555555",
          "address": {
            "street_name": "123 Market Street",
            "city": "San Francisco",
            "state": "CA",
            "postal_code": "94105",
            "country_code": "US"
          },
          "primary_care_provider": {
            "name": "Dr. Sarah Smith",
            "practice": "SF Medical Group"
          },
          "insurance": {
            "medical": [
              {
                "company_name": "Blue Cross Blue Shield",
                "member_id": "BCB123456789",
                "group_number": "GRP987654",
                "plan_name": "PPO Gold",
                "phone_number": "+18005551234",
                "relationship_to_subscriber": "SELF",
                "primary_subscriber": {
                  "first_name": "Jane",
                  "last_name": "Doe"
                }
              }
            ],
            "dental": [
              {
                "company_name": "Delta Dental",
                "member_id": "DDB123456789",
                "group_number": "GRPD123",
                "plan_name": "Premier Plan",
                "phone_number": "+18005553456",
                "relationship_to_subscriber": "SELF",
                "primary_subscriber": {
                  "first_name": "Jane",
                  "last_name": "Doe"
                }
              }
            ],
            "vision": [
              {
                "company_name": "VSP",
                "member_id": "VSP123456789",
                "group_number": "GRPV123",
                "plan_name": "Vision Care",
                "phone_number": "+18005554567",
                "relationship_to_subscriber": "SELF",
                "primary_subscriber": {
                  "first_name": "Jane",
                  "last_name": "Doe"
                }
              }
            ]
          },
          "created_at": "2024-03-20T08:00:00Z",
          "updated_at": "2024-03-20T08:00:00Z"
        }
      },
      "TaskType": {
        "type": "string",
        "enum": [
          "SCHEDULE_APPOINTMENT",
          "VERIFY_INSURANCE",
          "REIMBURSEMENT",
          "PROVIDER_CREDENTIALING",
          "CUSTOM_TASK"
        ],
        "description": "The type of task to be executed. \n \n Note: tasks need to be enabled at the project level"
      },
      "CallType": {
        "type": "string",
        "enum": [
          "CALL_TYPE_UNSPECIFIED",
          "INBOUND_CALL",
          "OUTBOUND_CALL"
        ],
        "description": "The type of call (inbound or outbound)"
      },
      "TaskStatus": {
        "type": "string",
        "enum": [
          "PENDING",
          "IN_PROGRESS",
          "COMPLETED",
          "FAILED",
          "CANCELLED"
        ],
        "description": "The status of a task"
      },
      "CreateTaskRequest": {
        "type": "object",
        "required": [
          "task_type",
          "task",
          "phone_number",
          "project_id",
          "patient_id"
        ],
        "properties": {
          "task_type": {
            "$ref": "#/components/schemas/TaskType"
          },
          "task": {
            "type": "string",
            "description": "Main task description with sufficient detail for the voice agent",
            "example": "Schedule a follow-up appointment with Dr. Smith for next week"
          },
          "phone_number": {
            "$ref": "#/components/schemas/PhoneNumber"
          },
          "project_id": {
            "type": "string",
            "format": "uuid",
            "description": "UUID of the project this task belongs to",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "patient_id": {
            "type": "string",
            "format": "uuid",
            "description": "UUID of the patient that this task is about",
            "example": "123e4567-e89b-12d3-a456-426614174001"
          },
          "task_data": {
            "oneOf": [
              {
                "type": "object",
                "title": "Schedule Appointment Data",
                "description": "Data specific to scheduling appointments",
                "properties": {
                  "timeframe_availability": {
                    "type": "string",
                    "description": "Timeframe availability for the appointment"
                  },
                  "speciality_preferences": {
                    "type": "string",
                    "description": "Speciality preferences for the appointment"
                  },
                  "additional_context": {
                    "type": "string",
                    "description": "Additional context for the appointment"
                  },
                  "previous_visits": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Visit"
                    }
                  },
                  "patient_status": {
                    "type": "string",
                    "description": "Status of the patient (new or existing)"
                  },
                  "has_referral": {
                    "type": "boolean",
                    "description": "Whether the patient has a referral"
                  },
                  "referral": {
                    "$ref": "#/components/schemas/Provider"
                  },
                  "is_rescheduling": {
                    "type": "boolean",
                    "description": "Whether this is a rescheduling"
                  },
                  "existing_appointment": {
                    "type": "string",
                    "description": "Details of the existing appointment (for rescheduling)"
                  },
                  "reschedule_reason": {
                    "type": "string",
                    "description": "Reason for rescheduling"
                  }
                }
              },
              {
                "type": "object",
                "title": "Verify Insurance Data",
                "description": "Data specific to insurance verification",
                "properties": {
                  "service": {
                    "type": "object",
                    "properties": {
                      "description": {
                        "type": "string",
                        "example": "MRI of right knee"
                      },
                      "cpt_codes": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "example": [
                          "73721"
                        ]
                      }
                    }
                  },
                  "requirements": {
                    "type": "string",
                    "description": "Requirements for the insurance verification",
                    "example": "Need to verify out-of-network coverage"
                  },
                  "additional_context": {
                    "type": "string",
                    "description": "Additional context for the insurance verification",
                    "example": "Patient may need pre-authorization"
                  }
                }
              },
              {
                "type": "object",
                "title": "Reimbursement Data",
                "description": "Data specific to insurance reimbursement",
                "properties": {
                  "case_info": {
                    "type": "object",
                    "properties": {
                      "number": {
                        "type": "string",
                        "description": "The case number",
                        "example": "CASE-12345"
                      }
                    }
                  },
                  "bill": {
                    "type": "object",
                    "properties": {
                      "number": {
                        "type": "string",
                        "description": "The bill number",
                        "example": "INV-12345"
                      },
                      "amount": {
                        "type": "string",
                        "description": "The amount of the bill",
                        "example": "$1,250.00"
                      }
                    }
                  },
                  "reimbursement_status": {
                    "type": "string",
                    "description": "The reimbursement status",
                    "example": "Pending"
                  },
                  "treatment_background": {
                    "type": "string",
                    "description": "The treatment background",
                    "example": "Emergency room visit for broken arm"
                  },
                  "additional_context": {
                    "type": "string",
                    "description": "Additional context for the reimbursement",
                    "example": "Need to reach billing department for invoice question"
                  }
                }
              },
              {
                "type": "object",
                "title": "Provider Credentialing Data",
                "description": "Data specific to provider credentialing",
                "properties": {
                  "provider": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The name of the provider",
                        "example": "Dr. Jane Smith"
                      },
                      "npi": {
                        "type": "string",
                        "description": "The NPI of the provider",
                        "example": "1234567890"
                      },
                      "specialty": {
                        "type": "string",
                        "description": "The specialty of the provider",
                        "example": "Orthopedic Surgery"
                      }
                    }
                  },
                  "additional_context": {
                    "type": "string",
                    "description": "Additional context for provider credentialing",
                    "example": "Verifying status of credentialing application submitted last month"
                  }
                }
              },
              {
                "type": "object",
                "title": "Custom Task Data",
                "description": "Data specific to custom tasks",
                "properties": {
                  "additional_context": {
                    "type": "string",
                    "description": "Additional context for custom task",
                    "example": "Check if the member has received their recent wheelchair delivery and if they have any questions about it"
                  },
                  "questions_to_ask": {
                    "type": "array",
                    "description": "List of questions that the agent should ask during the custom task call",
                    "items": {
                      "type": "object",
                      "properties": {
                        "question": {
                          "type": "string",
                          "description": "The question to ask",
                          "example": "Have you received your wheelchair delivery?"
                        },
                        "context": {
                          "type": "string",
                          "description": "Additional context for the question",
                          "example": "Delivery was scheduled for last Tuesday"
                        }
                      }
                    }
                  }
                }
              }
            ],
            "discriminator": {
              "propertyName": "task_type",
              "mapping": {
                "SCHEDULE_APPOINTMENT": "#/components/schemas/ScheduleAppointmentData",
                "VERIFY_INSURANCE": "#/components/schemas/VerifyInsuranceData",
                "REIMBURSEMENT": "#/components/schemas/ReimbursementData",
                "PROVIDER_CREDENTIALING": "#/components/schemas/ProviderCredentialingData",
                "CUSTOM_TASK": "#/components/schemas/CustomTaskData"
              }
            }
          }
        }
      },
      "TaskResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "UUID of the task",
            "example": "123e4567-e89b-12d3-a456-426614174002"
          },
          "project_id": {
            "type": "string",
            "format": "uuid",
            "description": "UUID of the project this task belongs to",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "patient_id": {
            "type": "string",
            "format": "uuid",
            "description": "UUID of the patient that this task is about",
            "example": "123e4567-e89b-12d3-a456-426614174001"
          },
          "status": {
            "$ref": "#/components/schemas/TaskStatus"
          },
          "call_details": {
            "type": "object",
            "description": "Details specific to tasks executed via phone calls",
            "properties": {
              "call_type": {
                "$ref": "#/components/schemas/CallType"
              },
              "recording_url": {
                "type": "string",
                "format": "uri",
                "nullable": true,
                "description": "Presigned URL for the call recording (when available)"
              },
              "transcript": {
                "$ref": "#/components/schemas/Transcript",
                "nullable": true,
                "description": "Transcript/chat history for the call (when available)"
              }
            }
          },
          "task_type": {
            "$ref": "#/components/schemas/TaskType"
          },
          "task": {
            "type": "string",
            "description": "Main task description"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the task was created"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the task was last updated"
          }
        }
      },
      "Visit": {
        "type": "object",
        "properties": {
          "purpose": {
            "type": "string",
            "description": "The purpose of the visit",
            "example": "Initial consultation"
          },
          "date": {
            "$ref": "#/components/schemas/Date"
          },
          "outcome": {
            "type": "string",
            "description": "The outcome of the visit",
            "example": "Referred to specialist"
          }
        }
      },
      "Provider": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the provider",
            "example": "Dr. Jane Smith"
          },
          "npi": {
            "type": "string",
            "description": "National Provider Identifier",
            "example": "1234567890"
          },
          "specialty": {
            "type": "string",
            "description": "Provider's specialty",
            "example": "Orthopedic Surgery"
          },
          "practice": {
            "type": "string",
            "description": "Practice or facility name",
            "example": "Bay Area Orthopedics"
          },
          "address": {
            "$ref": "#/components/schemas/Address"
          },
          "phone_number": {
            "$ref": "#/components/schemas/PhoneNumber"
          }
        }
      }
    }
  }
}