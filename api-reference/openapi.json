{
  "openapi": "3.1.0",
  "info": {
    "title": "Mira API",
    "version": "1.0.0"
  },
  "paths": {
    "/v1/task": {
      "post": {
        "operationId": "create_task",
        "summary": "Create a new task",
        "description": "Create a new task to be executed by Mira's voice agent.\n\nThis endpoint creates a new task and handles the following:\n* Creates a new job if this is not a follow-up task\n* Uses existing job for follow-up tasks\n* Creates a LiveKit room for voice conversations\n* Dispatches an AI voice agent to execute the task",
        "x-codeSamples": [
          {
            "lang": "Python",
            "label": "Schedule Appointment",
            "source": "import requests\n\nurl = 'https://api.miramace.com/v1/task'\nheaders = {\n    'Authorization': 'Bearer YOUR_API_KEY',\n    'Content-Type': 'application/json'\n}\npayload = {\n    'task_type': 'SCHEDULE_APPOINTMENT',\n    'task': 'Schedule a follow-up appointment with Dr. Smith for next week',\n    'phone_number': '+15555555555',\n    'project_id': 'proj_xyz789',\n    'patient_id': 'pat_abc123',\n    'task_data': {\n        'medical_context': 'Patient had knee surgery on March 15th, needs 2-week follow-up',\n        'timeframe_availability': 'Weekdays between 2-5pm',\n        'speciality_preferences': 'Orthopedic surgeon, preferably Dr. Smith',\n        'additional_context': 'Patient prefers afternoon appointments'\n    }\n}\n\nresponse = requests.post(url, json=payload, headers=headers)\nprint(response.json())"
          },
          {
            "lang": "Python",
            "label": "Verify Insurance",
            "source": "import requests\n\nurl = 'https://api.miramace.com/v1/task'\nheaders = {\n    'Authorization': 'Bearer YOUR_API_KEY',\n    'Content-Type': 'application/json'\n}\npayload = {\n    'task_type': 'VERIFY_INSURANCE',\n    'task': 'Verify insurance coverage for MRI',\n    'phone_number': '+15555555555',\n    'project_id': 'proj_xyz789',\n    'patient_id': 'pat_abc123',\n    'task_data': {\n        'service': {\n            'description': 'MRI of right knee',\n            'cpt_codes': ['73721']\n        },\n        'requirements': 'Need to verify out-of-network coverage',\n        'additional_context': 'Patient may need pre-authorization'\n    }\n}\n\nresponse = requests.post(url, json=payload, headers=headers)\nprint(response.json())"
          },
          {
            "lang": "Python",
            "label": "Insurance Reimbursement",
            "source": "import requests\n\nurl = 'https://api.miramace.com/v1/task'\nheaders = {\n    'Authorization': 'Bearer YOUR_API_KEY',\n    'Content-Type': 'application/json'\n}\npayload = {\n    'task_type': 'INSURANCE_REIMBURSEMENT',\n    'task': 'Follow up on reimbursement for ER visit',\n    'phone_number': '+15555555555',\n    'project_id': 'proj_xyz789',\n    'patient_id': 'pat_abc123',\n    'task_data': {\n        'case_info': {\n            'number': 'CASE-12345'\n        },\n        'bill': {\n            'number': 'INV-12345',\n            'amount': '$1,250.00'\n        },\n        'reimbursement_status': 'Pending',\n        'treatment_background': 'Emergency room visit for broken arm',\n        'additional_context': 'Need to reach billing department for invoice question'\n    }\n}\n\nresponse = requests.post(url, json=payload, headers=headers)\nprint(response.json())"
          },
          {
            "lang": "Python",
            "label": "Provider Credentialing",
            "source": "import requests\n\nurl = 'https://api.miramace.com/v1/task'\nheaders = {\n    'Authorization': 'Bearer YOUR_API_KEY',\n    'Content-Type': 'application/json'\n}\npayload = {\n    'task_type': 'PROVIDER_CREDENTIALING',\n    'task': 'Check credentialing status for Dr. Smith',\n    'phone_number': '+15555555555',\n    'project_id': 'proj_xyz789',\n    'patient_id': 'pat_abc123',\n    'task_data': {\n        'provider': {\n            'name': 'Dr. Jane Smith',\n            'npi': '1234567890',\n            'specialty': 'Orthopedics'\n        },\n        'additional_context': 'Verifying status of credentialing application submitted last month'\n    }\n}\n\nresponse = requests.post(url, json=payload, headers=headers)\nprint(response.json())"
          },
          {
            "lang": "Python",
            "label": "Custom Task",
            "source": "import requests\n\nurl = 'https://api.miramace.com/v1/task'\nheaders = {\n    'Authorization': 'Bearer YOUR_API_KEY',\n    'Content-Type': 'application/json'\n}\npayload = {\n    'task_type': 'CUSTOM_TASK',\n    'task': 'Follow up on wheelchair delivery',\n    'phone_number': '+15555555555',\n    'project_id': 'proj_xyz789',\n    'patient_id': 'pat_abc123',\n    'task_data': {\n        'additional_context': 'Check if the member has received their recent wheelchair delivery and if they have any questions about it',\n        'questions_to_ask': [\n            {\n                'question': 'Have you received your wheelchair delivery?',\n                'context': 'Delivery was scheduled for last Tuesday'\n            },\n            {\n                'question': 'Is the wheelchair meeting your needs?',\n                'context': 'This is a standard follow-up question'\n            }\n        ]\n    }\n}\n\nresponse = requests.post(url, json=payload, headers=headers)\nprint(response.json())"
          },
          {
            "lang": "JavaScript",
            "label": "Schedule Appointment",
            "source": "const response = await fetch('https://api.miramace.com/v1/task', {\n  method: 'POST',\n  headers: {\n    'Authorization': 'Bearer YOUR_API_KEY',\n    'Content-Type': 'application/json',\n  },\n  body: JSON.stringify({\n    task_type: 'SCHEDULE_APPOINTMENT',\n    task: 'Schedule a follow-up appointment with Dr. Smith for next week',\n    phone_number: '+15555555555',\n    project_id: 'proj_xyz789',\n    patient_id: 'pat_abc123',\n    task_data: {\n      medical_context: 'Patient had knee surgery on March 15th, needs 2-week follow-up',\n      timeframe_availability: 'Weekdays between 2-5pm',\n      speciality_preferences: 'Orthopedic surgeon, preferably Dr. Smith',\n      additional_context: 'Patient prefers afternoon appointments'\n    }\n  })\n});\n\nconst data = await response.json();\nconsole.log(data);"
          },
          {
            "lang": "JavaScript",
            "label": "Verify Insurance",
            "source": "const response = await fetch('https://api.miramace.com/v1/task', {\n  method: 'POST',\n  headers: {\n    'Authorization': 'Bearer YOUR_API_KEY',\n    'Content-Type': 'application/json',\n  },\n  body: JSON.stringify({\n    task_type: 'VERIFY_INSURANCE',\n    task: 'Verify insurance coverage for MRI',\n    phone_number: '+15555555555',\n    project_id: 'proj_xyz789',\n    patient_id: 'pat_abc123',\n    task_data: {\n      service: {\n        description: 'MRI of right knee',\n        cpt_codes: ['73721']\n      },\n      requirements: 'Need to verify out-of-network coverage',\n      additional_context: 'Patient may need pre-authorization'\n    }\n  })\n});\n\nconst data = await response.json();\nconsole.log(data);"
          },
          {
            "lang": "JavaScript",
            "label": "Insurance Reimbursement",
            "source": "const response = await fetch('https://api.miramace.com/v1/task', {\n  method: 'POST',\n  headers: {\n    'Authorization': 'Bearer YOUR_API_KEY',\n    'Content-Type': 'application/json',\n  },\n  body: JSON.stringify({\n    task_type: 'INSURANCE_REIMBURSEMENT',\n    task: 'Follow up on reimbursement for ER visit',\n    phone_number: '+15555555555',\n    project_id: 'proj_xyz789',\n    patient_id: 'pat_abc123',\n    task_data: {\n      case_info: {\n        number: 'CASE-12345'\n      },\n      bill: {\n        number: 'INV-12345',\n        amount: '$1,250.00'\n      },\n      reimbursement_status: 'Pending',\n      treatment_background: 'Emergency room visit for broken arm',\n      additional_context: 'Need to reach billing department for invoice question'\n    }\n  })\n});\n\nconst data = await response.json();\nconsole.log(data);"
          },
          {
            "lang": "JavaScript",
            "label": "Provider Credentialing",
            "source": "const response = await fetch('https://api.miramace.com/v1/task', {\n  method: 'POST',\n  headers: {\n    'Authorization': 'Bearer YOUR_API_KEY',\n    'Content-Type': 'application/json',\n  },\n  body: JSON.stringify({\n    task_type: 'PROVIDER_CREDENTIALING',\n    task: 'Check credentialing status for Dr. Smith',\n    phone_number: '+15555555555',\n    project_id: 'proj_xyz789',\n    patient_id: 'pat_abc123',\n    task_data: {\n      provider: {\n        name: 'Dr. Jane Smith',\n        npi: '1234567890',\n        specialty: 'Orthopedics'\n      },\n      additional_context: 'Verifying status of credentialing application submitted last month'\n    }\n  })\n});\n\nconst data = await response.json();\nconsole.log(data);"
          },
          {
            "lang": "JavaScript",
            "label": "Custom Task",
            "source": "const response = await fetch('https://api.miramace.com/v1/task', {\n  method: 'POST',\n  headers: {\n    'Authorization': 'Bearer YOUR_API_KEY',\n    'Content-Type': 'application/json',\n  },\n  body: JSON.stringify({\n    task_type: 'CUSTOM_TASK',\n    task: 'Follow up on wheelchair delivery',\n    phone_number: '+15555555555',\n    project_id: 'proj_xyz789',\n    patient_id: 'pat_abc123',\n    task_data: {\n      additional_context: 'Check if the member has received their recent wheelchair delivery and if they have any questions about it',\n      questions_to_ask: [\n        {\n          question: 'Have you received your wheelchair delivery?',\n          context: 'Delivery was scheduled for last Tuesday'\n        },\n        {\n          question: 'Is the wheelchair meeting your needs?',\n          context: 'This is a standard follow-up question'\n        }\n      ]\n    }\n  })\n});\n\nconst data = await response.json();\nconsole.log(data);"
          },
          {
            "lang": "cURL",
            "label": "Schedule Appointment",
            "source": "curl --request POST \\\n  --url https://api.miramace.com/v1/task \\\n  --header 'Authorization: Bearer YOUR_API_KEY' \\\n  --header 'Content-Type: application/json' \\\n  --data '{\n    \"task_type\": \"SCHEDULE_APPOINTMENT\",\n    \"task\": \"Schedule a follow-up appointment with Dr. Smith for next week\",\n    \"phone_number\": \"+15555555555\",\n    \"project_id\": \"proj_xyz789\",\n    \"patient_id\": \"pat_abc123\",\n    \"task_data\": {\n      \"medical_context\": \"Patient had knee surgery on March 15th, needs 2-week follow-up\",\n      \"timeframe_availability\": \"Weekdays between 2-5pm\",\n      \"speciality_preferences\": \"Orthopedic surgeon, preferably Dr. Smith\",\n      \"additional_context\": \"Patient prefers afternoon appointments\"\n    }\n  }'"
          },
          {
            "lang": "cURL",
            "label": "Verify Insurance",
            "source": "curl --request POST \\\n  --url https://api.miramace.com/v1/task \\\n  --header 'Authorization: Bearer YOUR_API_KEY' \\\n  --header 'Content-Type: application/json' \\\n  --data '{\n    \"task_type\": \"VERIFY_INSURANCE\",\n    \"task\": \"Verify insurance coverage for MRI\",\n    \"phone_number\": \"+15555555555\",\n    \"project_id\": \"proj_xyz789\",\n    \"patient_id\": \"pat_abc123\",\n    \"task_data\": {\n      \"service\": {\n        \"description\": \"MRI of right knee\",\n        \"cpt_codes\": [\"73721\"]\n      },\n      \"requirements\": \"Need to verify out-of-network coverage\",\n      \"additional_context\": \"Patient may need pre-authorization\"\n    }\n  }'"
          },
          {
            "lang": "cURL",
            "label": "Insurance Reimbursement",
            "source": "curl --request POST \\\n  --url https://api.miramace.com/v1/task \\\n  --header 'Authorization: Bearer YOUR_API_KEY' \\\n  --header 'Content-Type: application/json' \\\n  --data '{\n    \"task_type\": \"INSURANCE_REIMBURSEMENT\",\n    \"task\": \"Follow up on reimbursement for ER visit\",\n    \"phone_number\": \"+15555555555\",\n    \"project_id\": \"proj_xyz789\",\n    \"patient_id\": \"pat_abc123\",\n    \"task_data\": {\n      \"case_info\": {\n        \"number\": \"CASE-12345\"\n      },\n      \"bill\": {\n        \"number\": \"INV-12345\",\n        \"amount\": \"$1,250.00\"\n      },\n      \"reimbursement_status\": \"Pending\",\n      \"treatment_background\": \"Emergency room visit for broken arm\",\n      \"additional_context\": \"Need to reach billing department for invoice question\"\n    }\n  }'"
          },
          {
            "lang": "cURL",
            "label": "Provider Credentialing",
            "source": "curl --request POST \\\n  --url https://api.miramace.com/v1/task \\\n  --header 'Authorization: Bearer YOUR_API_KEY' \\\n  --header 'Content-Type: application/json' \\\n  --data '{\n    \"task_type\": \"PROVIDER_CREDENTIALING\",\n    \"task\": \"Check credentialing status for Dr. Smith\",\n    \"phone_number\": \"+15555555555\",\n    \"project_id\": \"proj_xyz789\",\n    \"patient_id\": \"pat_abc123\",\n    \"task_data\": {\n      \"provider\": {\n        \"name\": \"Dr. Jane Smith\",\n        \"npi\": \"1234567890\",\n        \"specialty\": \"Orthopedics\"\n      },\n      \"additional_context\": \"Verifying status of credentialing application submitted last month\"\n    }\n  }'"
          },
          {
            "lang": "cURL",
            "label": "Custom Task",
            "source": "curl --request POST \\\n  --url https://api.miramace.com/v1/task \\\n  --header 'Authorization: Bearer YOUR_API_KEY' \\\n  --header 'Content-Type: application/json' \\\n  --data '{\n    \"task_type\": \"CUSTOM_TASK\",\n    \"task\": \"Follow up on wheelchair delivery\",\n    \"phone_number\": \"+15555555555\",\n    \"project_id\": \"proj_xyz789\",\n    \"patient_id\": \"pat_abc123\",\n    \"task_data\": {\n      \"additional_context\": \"Check if the member has received their recent wheelchair delivery and if they have any questions about it\",\n      \"questions_to_ask\": [\n        {\n          \"question\": \"Have you received your wheelchair delivery?\",\n          \"context\": \"Delivery was scheduled for last Tuesday\"\n        },\n        {\n          \"question\": \"Is the wheelchair meeting your needs?\",\n          \"context\": \"This is a standard follow-up question\"\n        }\n      ]\n    }\n  }'"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTaskRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Task created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskResponse"
                },
                "example": {
                  "id": "task_123abc",
                  "project_id": "proj_xyz789",
                  "patient_id": "pat_abc123",
                  "status": "PENDING",
                  "call_type": "OUTBOUND_CALL",
                  "task_type": "SCHEDULE_APPOINTMENT",
                  "task": "Schedule a follow-up appointment with Dr. Smith for next week",
                  "created_at": "2024-03-20T10:00:00Z",
                  "updated_at": "2024-03-20T10:00:00Z"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required fields",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Missing required fields"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid API key",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Invalid API key"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/task/{task_id}": {
      "get": {
        "operationId": "get_task",
        "summary": "Get task details",
        "description": "Get detailed information about a task, including its current status and progress.",
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "ffaa02bc-eed2-49ae-aa34-34b3c3ce551d"
            },
            "description": "The ID of the task to retrieve"
          },
          {
            "name": "include_patient",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Whether to include patient details in the response"
          },
          {
            "name": "include_transcript",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Whether to include the call transcript in the response"
          },
          {
            "name": "include_recording",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "Whether to include the call recording URL in the response"
          }
        ],
        "x-codeSamples": [
          {
            "lang": "Python",
            "source": "import requests\n\nurl = 'https://api.miramace.com/v1/task/ffaa02bc-eed2-49ae-aa34-34b3c3ce551d'\nheaders = {\n    'Authorization': 'Bearer YOUR_API_KEY'\n}\n\n# Optional query parameters\nparams = {\n    'include_patient': True,\n    'include_transcript': True,\n    'include_recording': False\n}\n\nresponse = requests.get(url, headers=headers, params=params)\nprint(response.json())"
          },
          {
            "lang": "JavaScript",
            "source": "const response = await fetch('https://api.miramace.com/v1/task/ffaa02bc-eed2-49ae-aa34-34b3c3ce551d?include_patient=true&include_transcript=true', {\n  headers: {\n    'Authorization': 'Bearer YOUR_API_KEY'\n  }\n});\n\nconst data = await response.json();\nconsole.log(data);"
          },
          {
            "lang": "cURL",
            "source": "curl --request GET \\\n  --url 'https://api.miramace.com/v1/task/ffaa02bc-eed2-49ae-aa34-34b3c3ce551d?include_patient=true&include_transcript=true' \\\n  --header 'Authorization: Bearer YOUR_API_KEY'"
          }
        ],
        "responses": {
          "200": {
            "description": "Task details retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskResponse"
                }
              }
            }
          },
          "404": {
            "description": "Task not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Task not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/patient": {
      "post": {
        "operationId": "create_patient",
        "summary": "Create a new patient",
        "x-codeSamples": [
          {
            "lang": "Python",
            "source": "import requests\n\nurl = 'https://api.miramace.com/v1/patient'\nheaders = {\n    'Authorization': 'Bearer YOUR_API_KEY',\n    'Content-Type': 'application/json'\n}\npayload = {\n    'project_id': 'proj_xyz789',\n    'phone_number': '+15555555555',\n    'email': 'patient@example.com',\n    'first_name': 'Jane',\n    'last_name': 'Doe'\n}\n\nresponse = requests.post(url, json=payload, headers=headers)\nprint(response.json())"
          },
          {
            "lang": "JavaScript",
            "source": "const response = await fetch('https://api.miramace.com/v1/patient', {\n  method: 'POST',\n  headers: {\n    'Authorization': 'Bearer YOUR_API_KEY',\n    'Content-Type': 'application/json',\n  },\n  body: JSON.stringify({\n    project_id: 'proj_xyz789',\n    phone_number: '+15555555555',\n    email: 'patient@example.com',\n    first_name: 'Jane',\n    last_name: 'Doe'\n  })\n});\n\nconst data = await response.json();\nconsole.log(data);"
          },
          {
            "lang": "cURL",
            "source": "curl --request POST \\\n  --url https://api.miramace.com/v1/patient \\\n  --header 'Authorization: Bearer YOUR_API_KEY' \\\n  --header 'Content-Type: application/json' \\\n  --data '{\n    \"project_id\": \"proj_xyz789\",\n    \"phone_number\": \"+15555555555\",\n    \"email\": \"patient@example.com\",\n    \"first_name\": \"Jane\",\n    \"last_name\": \"Doe\"\n  }'"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePatientRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Patient created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientResponse"
                },
                "example": {
                  "id": "pat_abc123",
                  "project_id": "proj_xyz789",
                  "phone_number": "+15555555555",
                  "email": "patient@example.com",
                  "first_name": "Jane",
                  "last_name": "Doe",
                  "created_at": "2024-03-20T10:00:00Z",
                  "updated_at": "2024-03-20T10:00:00Z"
                }
              }
            }
          }
        }
      }
    },
    "/v1/patient/{patient_id}": {
      "get": {
        "operationId": "get_patient",
        "summary": "Get patient details",
        "description": "Get detailed information about a patient.",
        "parameters": [
          {
            "name": "patient_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "d7038030-aa24-4b89-a076-23c3fd29df34"
            },
            "description": "The ID of the patient to retrieve"
          }
        ],
        "x-codeSamples": [
          {
            "lang": "Python",
            "source": "import requests\n\nurl = 'https://api.miramace.com/v1/patient/d7038030-aa24-4b89-a076-23c3fd29df34'\nheaders = {\n    'Authorization': 'Bearer YOUR_API_KEY'\n}\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())"
          },
          {
            "lang": "JavaScript",
            "source": "const response = await fetch('https://api.miramace.com/v1/patient/d7038030-aa24-4b89-a076-23c3fd29df34', {\n  headers: {\n    'Authorization': 'Bearer YOUR_API_KEY'\n  }\n});\n\nconst data = await response.json();\nconsole.log(data);"
          },
          {
            "lang": "cURL",
            "source": "curl --request GET \\\n  --url https://api.miramace.com/v1/patient/d7038030-aa24-4b89-a076-23c3fd29df34 \\\n  --header 'Authorization: Bearer YOUR_API_KEY'"
          }
        ],
        "responses": {
          "200": {
            "description": "Patient details retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientResponse"
                }
              }
            }
          },
          "404": {
            "description": "Patient not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "example": "Patient not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "PhoneNumber": {
        "type": "string",
        "description": "The phone number to call in E.164 format (e.g., +15555555555)",
        "pattern": "^\\+[1-9]\\d{1,14}$",
        "example": "+15555555555"
      },
      "TaskType": {
        "type": "string",
        "enum": [
          "TASK_TYPE_UNSPECIFIED",
          "SCHEDULE_APPOINTMENT",
          "GET_APPOINTMENT_DETAILS",
          "VERIFY_INSURANCE",
          "INSURANCE_REIMBURSEMENT"
        ]
      },
      "CallType": {
        "type": "string",
        "enum": [
          "CALL_TYPE_UNSPECIFIED",
          "INBOUND_CALL",
          "OUTBOUND_CALL"
        ],
        "description": "The type of call (inbound or outbound)"
      },
      "TaskStatus": {
        "type": "string",
        "enum": [
          "PENDING",
          "IN_PROGRESS",
          "COMPLETED",
          "FAILED",
          "CANCELLED"
        ],
        "description": "The status of a task"
      },
      "CreateTaskRequest": {
        "type": "object",
        "required": [
          "task_type",
          "task",
          "phone_number",
          "project_id",
          "patient_id"
        ],
        "properties": {
          "task_type": {
            "$ref": "#/components/schemas/TaskType"
          },
          "task": {
            "type": "string",
            "description": "Main task description with sufficient detail for the voice agent",
            "example": "Schedule a follow-up appointment with Dr. Smith for next week"
          },
          "phone_number": {
            "$ref": "#/components/schemas/PhoneNumber"
          },
          "project_id": {
            "type": "string",
            "format": "uuid",
            "description": "ID of the project this task belongs to",
            "example": "proj_xyz789"
          },
          "patient_id": {
            "type": "string",
            "format": "uuid",
            "description": "ID of the patient that this task is about",
            "example": "pat_abc123"
          },
          "task_data": {
            "oneOf": [
              {
                "type": "object",
                "title": "Schedule Appointment Data",
                "description": "Data specific to scheduling appointments",
                "properties": {
                  "medical_context": {
                    "type": "string",
                    "description": "Medical context for the appointment",
                    "example": "Patient had knee surgery on March 15th, needs 2-week follow-up"
                  },
                  "timeframe_availability": {
                    "type": "string",
                    "description": "Timeframe availability for the appointment",
                    "example": "Weekdays between 2-5pm"
                  },
                  "speciality_preferences": {
                    "type": "string",
                    "description": "Speciality preferences for the appointment",
                    "example": "Orthopedic surgeon, preferably Dr. Smith"
                  },
                  "additional_context": {
                    "type": "string",
                    "description": "Additional context for the appointment",
                    "example": "Patient prefers afternoon appointments"
                  }
                }
              },
              {
                "type": "object",
                "title": "Verify Insurance Data",
                "description": "Data specific to insurance verification",
                "properties": {
                  "service": {
                    "type": "object",
                    "properties": {
                      "description": {
                        "type": "string",
                        "example": "MRI of right knee"
                      },
                      "cpt_codes": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "example": [
                          "73721"
                        ]
                      }
                    }
                  },
                  "requirements": {
                    "type": "string",
                    "description": "Requirements for the insurance verification",
                    "example": "Need to verify out-of-network coverage"
                  },
                  "additional_context": {
                    "type": "string",
                    "description": "Additional context for the insurance verification",
                    "example": "Patient may need pre-authorization"
                  }
                }
              },
              {
                "type": "object",
                "title": "Reimbursement Data",
                "description": "Data specific to insurance reimbursement",
                "properties": {
                  "case_info": {
                    "type": "object",
                    "properties": {
                      "number": {
                        "type": "string",
                        "description": "The case number",
                        "example": "CASE-12345"
                      }
                    }
                  },
                  "bill": {
                    "type": "object",
                    "properties": {
                      "number": {
                        "type": "string",
                        "description": "The bill number",
                        "example": "INV-12345"
                      },
                      "amount": {
                        "type": "string",
                        "description": "The amount of the bill",
                        "example": "$1,250.00"
                      }
                    }
                  },
                  "reimbursement_status": {
                    "type": "string",
                    "description": "The reimbursement status",
                    "example": "Pending"
                  },
                  "treatment_background": {
                    "type": "string",
                    "description": "The treatment background",
                    "example": "Emergency room visit for broken arm"
                  },
                  "additional_context": {
                    "type": "string",
                    "description": "Additional context for the reimbursement",
                    "example": "Need to reach billing department for invoice question"
                  }
                }
              },
              {
                "type": "object",
                "title": "Provider Credentialing Data",
                "description": "Data specific to provider credentialing",
                "properties": {
                  "provider": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The name of the provider",
                        "example": "Dr. Jane Smith"
                      },
                      "npi": {
                        "type": "string",
                        "description": "The NPI of the provider",
                        "example": "1234567890"
                      },
                      "specialty": {
                        "type": "string",
                        "description": "The specialty of the provider",
                        "example": "Orthopedics"
                      }
                    }
                  },
                  "additional_context": {
                    "type": "string",
                    "description": "Additional context for provider credentialing",
                    "example": "Verifying status of credentialing application submitted last month"
                  }
                }
              },
              {
                "type": "object",
                "title": "Custom Task Data",
                "description": "Data specific to custom tasks",
                "properties": {
                  "additional_context": {
                    "type": "string",
                    "description": "Additional context for custom task",
                    "example": "Check if the member has received their recent wheelchair delivery and if they have any questions about it"
                  },
                  "questions_to_ask": {
                    "type": "array",
                    "description": "List of questions that the agent should ask during the custom task call",
                    "items": {
                      "type": "object",
                      "properties": {
                        "question": {
                          "type": "string",
                          "description": "The question to ask",
                          "example": "Have you received your wheelchair delivery?"
                        },
                        "context": {
                          "type": "string",
                          "description": "Additional context for the question",
                          "example": "Delivery was scheduled for last Tuesday"
                        }
                      }
                    }
                  }
                }
              }
            ],
            "discriminator": {
              "propertyName": "task_type",
              "mapping": {
                "SCHEDULE_APPOINTMENT": "#/components/schemas/ScheduleAppointmentData",
                "VERIFY_INSURANCE": "#/components/schemas/VerifyInsuranceData",
                "INSURANCE_REIMBURSEMENT": "#/components/schemas/ReimbursementData",
                "PROVIDER_CREDENTIALING": "#/components/schemas/ProviderCredentialingData",
                "CUSTOM_TASK": "#/components/schemas/CustomTaskData"
              }
            }
          }
        }
      },
      "TaskResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for the task"
          },
          "project_id": {
            "type": "string",
            "format": "uuid",
            "description": "ID of the project this task belongs to"
          },
          "patient_id": {
            "type": "string",
            "format": "uuid",
            "description": "ID of the patient that this task is about"
          },
          "status": {
            "$ref": "#/components/schemas/TaskStatus"
          },
          "call_details": {
            "type": "object",
            "description": "Details specific to tasks executed via phone calls",
            "properties": {
              "call_type": {
                "$ref": "#/components/schemas/CallType"
              },
              "recording_url": {
                "type": "string",
                "format": "uri",
                "nullable": true,
                "description": "Presigned URL for the call recording (when available)"
              },
              "transcript": {
                "$ref": "#/components/schemas/Transcript",
                "nullable": true,
                "description": "Transcript/chat history for the call (when available)"
              }
            }
          },
          "task_type": {
            "$ref": "#/components/schemas/TaskType"
          },
          "task": {
            "type": "string",
            "description": "Main task description"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the task was created"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the task was last updated"
          }
        }
      },
      "CreatePatientRequest": {
        "type": "object",
        "required": [
          "project_id",
          "phone_number"
        ],
        "properties": {
          "project_id": {
            "type": "string",
            "format": "uuid",
            "description": "ID of the project this patient belongs to"
          },
          "phone_number": {
            "$ref": "#/components/schemas/PhoneNumber"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "Email address of the patient"
          },
          "first_name": {
            "type": "string",
            "description": "First name of the patient",
            "example": "Jane"
          },
          "last_name": {
            "type": "string",
            "description": "Last name of the patient",
            "example": "Doe"
          }
        }
      },
      "PatientResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for the patient"
          },
          "project_id": {
            "type": "string",
            "format": "uuid",
            "description": "ID of the project this patient belongs to"
          },
          "phone_number": {
            "$ref": "#/components/schemas/PhoneNumber"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "Email address of the patient"
          },
          "first_name": {
            "type": "string",
            "description": "First name of the patient"
          },
          "last_name": {
            "type": "string",
            "description": "Last name of the patient"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the patient was created"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the patient was last updated"
          }
        }
      }
    }
  }
}